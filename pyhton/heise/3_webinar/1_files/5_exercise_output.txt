"):
"*.py"))
"../3_rest/")
"\n")
"__main__":
#
'__main__':
(hopefully
*
+
->
100)
=
==
Be
Path
Path(Path.cwd(),
Path)
Path.cwd()
Read
Remove
TODO
Text
[line.rstrip()
[line.strip()
[line[:-1]
__name__
all
and
as
carful!
character.
content
def
dir_1
dir_2
end='')
f
file.read()
file.readline()
file.readlines()
file.write(word
file:
file_list_1
file_list_1:
file_list_2
file_list_2:
file_list_3
file_list_3:
file_path
file_paths
file_paths:
for
from
get_file_paths(dir:
get_file_paths(dir_1)
get_word_set(file_paths)
get_word_set(file_paths:
if
import
in
is
last
line
line.split("
line:
lines
lines]
list(Path.glob(dir,
list[Path]):
list[Path]:
main()
main():
mode="rt"
mode="rt")
mode='rt')
mode='wt')
newline)
open('5_exercise_output.txt',
open(file_path,
pass
pathlib
preceding
print('-'
print()
print(content)
print(f)
print(file_path)
print(line)
print(line,
print(word,
print(word_set)
print_output_file()
print_output_file():
return
reversed(lines):
set()
sorted(Path.cwd().glob('*.py'))[0]
sorted(Path.cwd().parent.glob('*'))
sorted(Path.cwd().parent.glob('**/*.py'))
sorted(Path.cwd().parent.rglob('*.py'))
sorted(word_set);
the
trailing
while
whitespaces
with
word
word.strip()
word:
word_set
word_set.add(word)
word_set:
write_set_to_file(word_set)
write_set_to_file(word_set):
